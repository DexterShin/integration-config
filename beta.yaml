# Contains any jobs related to the beta cluster.
#
# Beta is a cluster meant to reproduce the production environnement out of
# virtual instances in the Wikimedia labs.  We use Jenkins job to maintain
# some recurring tasks such as running the MediaWiki database schema updates.
#
# Jobs should be prefixed with 'beta-' and tied to the 'deployment-bastion'
# host defined in Jenkins.  They will run as the `jenkins-deploy` user on that
# instance.  To create a new job simply use the provided default which would
# take care of the basic configuration.
#
# Example:
#
#  - job:
#    name: beta-myawesomeness
#    defaults: beta
#    <your stuff there>

# Basic valid defaults, making sure we run on the deployment-bastion host
# slave nodes which is in labs.
- defaults:
    name: beta
    description: |
      <p>Job is managed by <a href="https://www.mediawiki.org/wiki/CI/JJB">Jenkins Job Builder</a>.</p>
    project-type: freestyle

    node: deployment-bastion

    wrappers:
      - timeout:
          timeout: 360
          fail: true
      - timestamps
      - ansicolor

# Job to recompile math texvc whenever the mediawiki/extensions/Math repository
# is updated.  The job makes sure the submodule is up-to-date before triggering
# the /usr/bin/scap-recompile script.
#
# Should be triggered on post merge.
#
- job:
    name: beta-recompile-math-texvc
    defaults: beta

    triggers:
     - zuul

    builders:
     - shell: |
         echo "Making sure the Math extension is up to date"
         sudo -u mwdeploy -s /bin/bash -c '
            set -ex ;
            cd /home/wikipedia/common/php-master/extensions ;
            git submodule Math ;
            git submodule update --init Math ;
            git submodule Math ;
            '
         echo "Recompiling texvc as user 'mwdeploy'"
         sudo -u mwdeploy /usr/bin/scap-recompile


# Job to run MediaWiki update.php script on all the beta wikis.
#
# It is a matrix job which is a very nice feature in Jenkins to have a job run
# with different input parameters.  It is current drawback is that the list of
# databases is hardcoded in the Jenkins job (ie below) when it should really be
# generated out of the current list of database (which is all-labs.dblist in
# the repository operations/mediawiki-config.git). FIXME We should workaround
# this by having an integration test that would make sure boths repositories
# are in sync.
- job:
    name: beta-update-databases
    defaults: beta

    project-type: matrix

    axes:
     - axis:
        type: label-expression
        name: label
        values:
         # deployment-bastion has the 'betacluster' label
         - betacluster
     - axis:
        type: user-defined
        name: wikidb
        values:
         - aawiki
         - commonswiki
         - dewiki
         - dewikivoyage
         - ee_prototypewiki
         - enwiki
         - enwikibooks
         - enwikinews
         - enwikiquote
         - enwikisource
         - enwikiversity
         - enwikivoyage
         - enwiktionary
         - eowiki
         - hewiki
         - labswiki
         - metawiki
         - simplewiki
         - sqwiki
         - testwiki
         - wikidatawiki

    # The 'wikidb' axis defined above is exported by Jenkins as an
    # environnement variable. Makes it trivial to run on all databases.
    builders:
     - shell: "sudo -u mwdeploy mwscript update.php --wiki=$wikidb --quick"

    # We do not have a good way to detect databases modifications, so just spam
    # the beta cluster with update requests.
    triggers:
     - timed: '@hourly'

# Job to deploy the Wikimedia MediaWiki configuration files
#
# The configuration files are hosted in operations/mediawiki-config.git which
# is deployed manually on the production cluster.  On beta, we cant really keep
# up with all the changes, so we deploy them on sight.
#
# We simply update the repository on the beta host and do a git reset hard.
#
- job:
    name: beta-mediawiki-config-update
    defaults: use-zuul  # FIXME should use 'beta' probably

    triggers:
     - zuul

    node: deployment-bastion

    scm:
        # Hack, remove the git scm from `use-zuul`. There is
        # no need to clone / fetch the repository.

    builders:
     # FIXME: this should probably be a shell script
     - shell: |
        # Shell out using sudo:
        #  -u : to user  mwdeploy
        #  -E : preserve environnement variables
        #  -H : set HOME to mwdeploy default home
        #  -s /bin/bash -c '': da hack
        #
        # InitialiseSettings.php need to be touched to update the config
        # cache on the Apaches instances.
        sudo -u mwdeploy -E -H -s /bin/bash -c '
          set -ex ;
          pwd ;
          cd /home/wikipedia/common ;
          pwd ;
          git remote update ;
          git reset --hard "$ZUUL_COMMIT" ;
          git tag "jenkins_build_$BUILD_NUMBER" "$ZUUL_COMMIT" ;
          touch /home/wikipedia/common/wmf-config/InitialiseSettings.php ;
         '

# Job updating MediaWiki core+extensions code and refreshing the message
#
# This is the poor man auto updating script. We should probably split the
# script in different part and have the jobs trigger each other.
- job:
    name: beta-code-update
    defaults: beta

    builders:
     - shell: "sudo -u mwdeploy VERBOSE=YES /usr/local/bin/wmf-beta-autoupdate"

    triggers:
     # Every six minutes:
     - timed: '*/6 * * * *'
