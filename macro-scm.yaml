# MediaWiki core has branches that contains lot of extensions. Whenever
# we test master (which has no submodule) and then a wmf branch (which
# have submodules) we end up refetching all the extensions which is really
# slow.
# This git macro hardcode mediawiki/core to never update the submodules.
#
- scm:
    name: git-mwcore-nosubmodules
    scm:
     - git:
        url: '/var/lib/zuul/git/mediawiki/core'
        branches:
         - '$ZUUL_BRANCH'
        refspec: '$ZUUL_REF'
        disable-submodules: true

# Fetch a ZUUL_REF from Zuul non bare repo for a project while
# specifying whether we want to fetch submodules as well.
#
# @param gerrit-name The project name in Gerrit
# @param disable-submodules (true/false) whether to NOT fetch submodules
- scm:
    name: git-zuul
    scm:
     - git:
        url: '/var/lib/zuul/git/{gerrit-name}'
        branches:
         - '$ZUUL_BRANCH'
        refspec: '$ZUUL_REF'
        disable-submodules: '{disable-submodules}'

- scm:
    name: git-zuul-no-submodules
    scm:
     - git-zuul:
        disable-submodules: true
        gerrit-name: '{gerrit-name}'

- scm:
    name: git-zuul-with-submodules
    scm:
     - git-zuul:
        disable-submodules: false
        gerrit-name: '{gerrit-name}'

# Fetch an extension at the root of the workspace
#
# Example usage:
# scm:
#  - git-mwext-in-root:
#    ext-name: '{ext-name}'
- scm:
    name: git-mwext-in-root
    scm:
     - git:
        url: '/var/lib/zuul/git/mediawiki/extensions/{ext-name}'
        branches:
         - '$ZUUL_BRANCH'
        refspec: '$ZUUL_REF'
